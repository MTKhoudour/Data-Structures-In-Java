package school;
class Node {
	private int data ; 
	private Node next ; 
	
	public Node(int _data){
		this.data = _data ; 
		this.next = null ; 
	}
	
	public void setData(int xData){
		this.data = xData ; 
	}
	
	public int getData(){
		return this.data; 
	}
	
  public void setNext(Node nextNode){
		this.next = nextNode;
	}
	
	public Node getNext(){
		return this.next ;
	}
	
}

public class cLL {
	protected static Node tail ; 
	
	cLL(){
		tail = null ; 
	}
	
	static boolean isEmpty(){
		return tail == null ; 
	}
	
	static void push(int xData){
		Node myNode = new Node(xData); 
		
		if(isEmpty()){
			tail = myNode ; 
			tail.setNext(tail);
		}else {
			myNode.setNext(tail.getNext()); 
			tail.setNext(myNode); 
		}
	}

	static void append(int xData){
		Node newNode = new Node(xData); 
		
		if(isEmpty()){
			tail = newNode ; 
			tail.setNext(tail);
		}else {
			newNode.setNext(tail.getNext());
			tail.setNext(newNode); 
		}
		
		tail = tail.getNext(); 
	}

	static void pollHead(){
		Node head = tail.getNext() ; 
		if(tail == tail.getNext()){
			tail = null ; 
		}else {
			tail.setNext(head.getNext());
			head.setNext(null);
		}
	}

	static void  pollTail(){
		if( isEmpty() ) return ;
		Node temp = tail ;
		while( temp.getNext() != tail)
			temp = temp.getNext() ; 
		
		Node temp2 = tail ;
		if( temp == temp2)
			tail = null ; 
		else {
			temp.setNext(tail.getNext());
			tail = temp; 
		}
	}
	
	static boolean contains(int xData){
		if(isEmpty()) return false ;
		
		Node temp = tail.getNext() ; 
		while(temp != tail && temp.getData()!=xData)
			temp = temp.getNext() ;
		
		return temp.getData() == xData ;
	}

	static int length(){
		if(isEmpty()) return 0 ;  
		
		Node temp = tail ,temp2 = tail.getNext() ; 
		int counter = 0 ; 
		do {
			counter++ ;
			temp2 = temp2.getNext() ;
		} while ( temp2 != temp.getNext() );
		
		return counter ;
	}
	
	static void delete(int xData){
		if(isEmpty()) return ; 
		
		Node temp = tail.getNext(), prev = tail ; 
		
		for(int i=0; i<length() && temp.getData()!= xData; i++ ){
			prev = temp ; 
			temp = temp.getNext() ;
		}
		
		if(temp.getData() == xData){ 
			if(tail == tail.getNext()) 
				tail = null ;
			else {
				if(temp == tail)
					tail = prev ;
				prev.setNext(prev.getNext().getNext());
			}
		}else 
			return ;
	}
	
	static void printList(){
		Node temp = tail ;
		Node temp2 = tail.getNext() ; 
		do {
			System.out.print(temp2.getData() + " -> ");
			temp2 = temp2.getNext() ;
		} while ( temp2 != temp.getNext() );
		
		System.out.print("NULL. \n");
	}
	
	public static void main(String[] args) {
		cLL theList = new cLL() ; 
		theList.push(103);
		theList.push(7) ;
		theList.push(74) ;
		theList.push(63) ;
		theList.printList() ;
		theList.append(3); 
		theList.printList() ;
		System.out.print("Poll head , theList : " );
		theList.pollHead() ; 
		theList.printList() ;
		System.out.print("Poll tail , theList : " );
		theList.pollTail() ; 
		theList.printList() ; 
		theList.printList() ; 
		System.out.println("Contains 4 ?! : " + theList.contains(4)); 
		System.out.println("Contains 103 ?! : " + theList.contains(103)); 
		System.out.println("Length of the list is  : " + theList.length()); 
	
	}	
}
